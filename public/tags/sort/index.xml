<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sort on Yao</title>
    <link>https://www.yaolugnu.com/tags/sort/</link>
    <description>Recent content in Sort on Yao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 20 Sep 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.yaolugnu.com/tags/sort/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bubble, Insertion and Selection Sort</title>
      <link>https://www.yaolugnu.com/post/bubble-sort/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://www.yaolugnu.com/post/bubble-sort/</guid>
      <description>Bubble Sort Bubble Sort&#x9;is a simple sorting algorithm. It compares two adjacent elements and swap them until all elements are in order. It&amp;rsquo;s not suitable for large data set as its time complexity are of (n2).&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class BubbleSort { public static void sort(Comparable[] a){ for(int i = a.</description>
    </item>
    <item>
      <title>Quick Sort and Partition</title>
      <link>https://www.yaolugnu.com/post/quicksort/</link>
      <pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate>
      <guid>https://www.yaolugnu.com/post/quicksort/</guid>
      <description>Quick Sort Quick sort is a Divide and Conquer algorithm. It partitions a large array into two arrays by a pivot value, and carry out the process recursively so that the entire array becomes an ordered sequence.&#xA;1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 public class QuickSort { public static void main(String[] args) { System.</description>
    </item>
  </channel>
</rss>
