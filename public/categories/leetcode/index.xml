<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leetcode on Yao</title>
    <link>https://www.yaolugnu.com/categories/leetcode/</link>
    <description>Recent content in Leetcode on Yao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 29 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.yaolugnu.com/categories/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>String-leetcode</title>
      <link>https://www.yaolugnu.com/post/string-leetcode/</link>
      <pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.yaolugnu.com/post/string-leetcode/</guid>
      <description>Leetcode Questions about String 14.longest-common-prefix.java
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  class Solution { public String longestCommonPrefix(String[] strs) { // flower,flow,fly  if (strs.length == 0) { return null; } String prefix = strs[0]; int lengths = strs.length; for (int i = 1; i &amp;lt; lengths; i++) { while (strs[i].indexOf(prefix) != 0) { prefix = prefix.substring(0, prefix.</description>
    </item>
    
    <item>
      <title>Bubble, Insertion and Selection Sort</title>
      <link>https://www.yaolugnu.com/post/bubble-sort/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.yaolugnu.com/post/bubble-sort/</guid>
      <description>Bubble Sort Bubble Sort	is a simple sorting algorithm. It compares two adjacent elements and swap them until all elements are in order. It&amp;rsquo;s not suitable for large data set as its time complexity are of (n2).
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  public class BubbleSort { public static void sort(Comparable[] a){ for(int i = a.</description>
    </item>
    
    <item>
      <title>Quick Sort and Partition</title>
      <link>https://www.yaolugnu.com/post/quicksort/</link>
      <pubDate>Fri, 17 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.yaolugnu.com/post/quicksort/</guid>
      <description>Quick Sort Quick sort is a Divide and Conquer algorithm. It partitions a large array into two arrays by a pivot value, and carry out the process recursively so that the entire array becomes an ordered sequence.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  public class QuickSort { public static void main(String[] args) { System.</description>
    </item>
    
    <item>
      <title>Linklist and DoublyLinklist</title>
      <link>https://www.yaolugnu.com/post/linklist_and_doublylinklist/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.yaolugnu.com/post/linklist_and_doublylinklist/</guid>
      <description>This demo is to help us identify the different between the Linklist and DoublyLinklist
 what we need to notice
 Compare with the Linklist and DoublyLinklist, the Linklist compact with two elements, one is item, another is next point. the DoublyLinklist concact three elements, one is item as well, two others are preview ponit and next point.
Linklist  Linklist
 please notice some boundary conditions, like when we insert the elements the index need to be security check (index &amp;lt; 0 || index &amp;gt; N is not allowed)</description>
    </item>
    
    <item>
      <title>Java_in_SparseArray</title>
      <link>https://www.yaolugnu.com/post/java_in_sparsearray/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.yaolugnu.com/post/java_in_sparsearray/</guid>
      <description>SharseArray this demo is to help us transform the data from big data to the small data
 what we need to notic &amp;ldquo;= new int [11][11];&amp;rdquo; it means we have a Array is 11*11.
  2D to sparseArray, then sparseArray to 2D
 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108  public class SparseArray { //create init 2D array  // 0 means not 1 black 2 blue  public static void main(String[] args) { System.</description>
    </item>
    
    <item>
      <title>This is a configuration post.</title>
      <link>https://www.yaolugnu.com/post/hidden-post/</link>
      <pubDate>Tue, 04 Jun 2019 17:40:19 +0800</pubDate>
      
      <guid>https://www.yaolugnu.com/post/hidden-post/</guid>
      <description>&lt;section class=&#34;code-box-demo&#34;&gt;&lt;ul class=&#34;ant-timeline ant-timeline-alternate&#34;&gt;&lt;li class=&#34;ant-timeline-item ant-timeline-item-left&#34;&gt;&lt;div class=&#34;ant-timeline-item-tail&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-head ant-timeline-item-head-blue&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-content&#34;&gt;Create a services site 2015-09-01&lt;/div&gt;&lt;/li&gt;&lt;li class=&#34;ant-timeline-item ant-timeline-item-right&#34;&gt;&lt;div class=&#34;ant-timeline-item-tail&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-head ant-timeline-item-head-green&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-content&#34;&gt;Solve initial network problems 2015-09-01&lt;/div&gt;&lt;/li&gt;&lt;li class=&#34;ant-timeline-item ant-timeline-item-left&#34;&gt;&lt;div class=&#34;ant-timeline-item-tail&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue&#34;&gt;&lt;span role=&#34;img&#34; aria-label=&#34;clock-circle&#34; class=&#34;anticon anticon-clock-circle&#34; style=&#34;font-size: 16px;&#34;&gt;&lt;svg viewBox=&#34;64 64 896 896&#34; focusable=&#34;false&#34; data-icon=&#34;clock-circle&#34; width=&#34;1em&#34; height=&#34;1em&#34; fill=&#34;currentColor&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z&#34;&gt;&lt;/path&gt;&lt;path d=&#34;M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-content&#34;&gt;Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo.&lt;/div&gt;&lt;/li&gt;&lt;li class=&#34;ant-timeline-item ant-timeline-item-right&#34;&gt;&lt;div class=&#34;ant-timeline-item-tail&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-head ant-timeline-item-head-red&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-content&#34;&gt;Network problems being solved 2015-09-01&lt;/div&gt;&lt;/li&gt;&lt;li class=&#34;ant-timeline-item ant-timeline-item-left&#34;&gt;&lt;div class=&#34;ant-timeline-item-tail&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-head ant-timeline-item-head-blue&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-content&#34;&gt;Create a services site 2015-09-01&lt;/div&gt;&lt;/li&gt;&lt;li class=&#34;ant-timeline-item ant-timeline-item-last ant-timeline-item-right&#34;&gt;&lt;div class=&#34;ant-timeline-item-tail&#34;&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-head ant-timeline-item-head-custom ant-timeline-item-head-blue&#34;&gt;&lt;span role=&#34;img&#34; aria-label=&#34;clock-circle&#34; class=&#34;anticon anticon-clock-circle&#34; style=&#34;font-size: 16px;&#34;&gt;&lt;svg viewBox=&#34;64 64 896 896&#34; focusable=&#34;false&#34; data-icon=&#34;clock-circle&#34; width=&#34;1em&#34; height=&#34;1em&#34; fill=&#34;currentColor&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z&#34;&gt;&lt;/path&gt;&lt;path d=&#34;M686.7 638.6L544.1 535.5V288c0-4.4-3.6-8-8-8H488c-4.4 0-8 3.6-8 8v275.4c0 2.6 1.2 5 3.3 6.5l165.4 120.6c3.6 2.6 8.6 1.8 11.2-1.7l28.6-39c2.6-3.7 1.8-8.7-1.8-11.2z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&#34;ant-timeline-item-content&#34;&gt;Technical testing 2015-09-01&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/section&gt;
&lt;p&gt;This post is hidden from the home page.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
